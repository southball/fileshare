
type File {
	id: Int!
	name: String!
	isPublic: Boolean!
	createdAt: NaiveDateTime!
	downloadUrl: String!
	user: User!
	fileShares: [FileShare!]!
}

scalar FileId

input FileInput {
	name: String!
	isPublic: Boolean!
	uuid: String!
}

type FileShare {
	id: Int!
	createdAt: NaiveDateTime!
	file: File!
	user: User!
}

input FileShareInput {
	fileId: FileId!
	userId: UserId!
}




type Mutation {
	uploadTarget: UploadTarget!
	createFile(input: FileInput!): File!
	createFileShare(input: FileShareInput!): FileShare!
}

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

type Query {
	users: [User!]!
	file(id: FileId!): File!
	myFiles: [File!]!
}


type UploadTarget {
	uuid: String!
	url: String!
}

type User {
	id: Int!
	username: String!
	displayName: String!
	publicFiles: [File!]!
}

scalar UserId

schema {
	query: Query
	mutation: Mutation
}
